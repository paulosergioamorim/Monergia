// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monergia.DbContexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Monergia.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250323173245_ChangeRoleToString")]
    partial class ChangeRoleToString
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Monergia.Models.Acesso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("Monergia.Models.Condominio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(18)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Observations")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("SubrotaId")
                        .HasColumnType("uuid");

                    b.Property<string>("TelefoneAdmin")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.PrimitiveCollection<string[]>("TelefonesSincico")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("SubrotaId");

                    b.ToTable("Condominios");
                });

            modelBuilder.Entity("Monergia.Models.Elevador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nomenclatura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.ToTable("Elevadores");
                });

            modelBuilder.Entity("Monergia.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("character varying(95)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("character varying(95)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("character varying(95)");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Monergia.Models.Filial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("Monergia.Models.Rota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Rotas");
                });

            modelBuilder.Entity("Monergia.Models.Subrota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<Guid>("RotaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RotaId");

                    b.ToTable("Subrotas");
                });

            modelBuilder.Entity("Monergia.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<Guid>("FilialId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("character varying(95)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("character varying(95)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(95)
                        .HasColumnType("character varying(95)");

                    b.HasKey("Id");

                    b.HasIndex("FilialId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Monergia.Models.VisitaTecnica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CondominioId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("DataVisita")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("HoraFim")
                        .HasColumnType("time without time zone");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time without time zone");

                    b.Property<Guid>("Tecnico1Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Tecnico2Id")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CondominioId");

                    b.HasIndex("Tecnico1Id");

                    b.HasIndex("Tecnico2Id");

                    b.ToTable("VisitasTecnicas");
                });

            modelBuilder.Entity("Monergia.Models.Acesso", b =>
                {
                    b.HasOne("Monergia.Models.Condominio", "Condominio")
                        .WithMany("Acessos")
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("Monergia.Models.Condominio", b =>
                {
                    b.HasOne("Monergia.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monergia.Models.Subrota", "Subrota")
                        .WithMany()
                        .HasForeignKey("SubrotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Subrota");
                });

            modelBuilder.Entity("Monergia.Models.Elevador", b =>
                {
                    b.HasOne("Monergia.Models.Condominio", "Condominio")
                        .WithMany("Elevadores")
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condominio");
                });

            modelBuilder.Entity("Monergia.Models.Subrota", b =>
                {
                    b.HasOne("Monergia.Models.Rota", "Rota")
                        .WithMany("Subrotas")
                        .HasForeignKey("RotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rota");
                });

            modelBuilder.Entity("Monergia.Models.User", b =>
                {
                    b.HasOne("Monergia.Models.Filial", "Filial")
                        .WithMany()
                        .HasForeignKey("FilialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filial");
                });

            modelBuilder.Entity("Monergia.Models.VisitaTecnica", b =>
                {
                    b.HasOne("Monergia.Models.Condominio", "Condominio")
                        .WithMany("VisitasTecnicas")
                        .HasForeignKey("CondominioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monergia.Models.User", "Tecnico1")
                        .WithMany()
                        .HasForeignKey("Tecnico1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monergia.Models.User", "Tecnico2")
                        .WithMany()
                        .HasForeignKey("Tecnico2Id");

                    b.Navigation("Condominio");

                    b.Navigation("Tecnico1");

                    b.Navigation("Tecnico2");
                });

            modelBuilder.Entity("Monergia.Models.Condominio", b =>
                {
                    b.Navigation("Acessos");

                    b.Navigation("Elevadores");

                    b.Navigation("VisitasTecnicas");
                });

            modelBuilder.Entity("Monergia.Models.Rota", b =>
                {
                    b.Navigation("Subrotas");
                });
#pragma warning restore 612, 618
        }
    }
}
